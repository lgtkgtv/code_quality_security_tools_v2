#!/bin/bash
# Automated Mode Tool Configuration
# Uses the new tool-specific directory structure

# Tutorial configuration
TUTORIAL_NAME="Code Quality and Security Tools"
VENV_NAME="venv"
REQUIREMENTS_FILE="requirements.txt"
OUTPUT_DIR="analysis_output"

# Create output directory if it doesn't exist
mkdir -p "$OUTPUT_DIR"

# Prepare all tool working directories for automated mode
prepare_all_working_dirs() {
    for tool in bandit flake8 black mypy isort pytest; do
        rm -rf "tools/$tool/working_files"/*
        if [ -d "tools/$tool/examples" ]; then
            cp "tools/$tool/examples"/*_donot_fixme.py "tools/$tool/working_files/" 2>/dev/null || true
        fi
    done
}

# Tool definitions for automated mode
# Format: "tool_name|command|input_files|expected_issues|description"
TOOLS=(
    "bandit|bandit -r tools/bandit/working_files/ -f json -o $OUTPUT_DIR/bandit_report.json|tools/bandit/working_files/|5|Security vulnerability scanner"
    "flake8|flake8 tools/flake8/working_files/ --output-file=$OUTPUT_DIR/flake8_report.txt|tools/flake8/working_files/|10|PEP8 style checker"
    "black|black --check --diff tools/black/working_files/|tools/black/working_files/|1|Code formatter (check mode)"
    "mypy|mypy tools/mypy/working_files/ --ignore-missing-imports|tools/mypy/working_files/|8|Static type checker"
    "isort|isort --check-only --diff tools/isort/working_files/|tools/isort/working_files/|1|Import sorter (check mode)"
    "pytest|pytest tools/pytest/working_files/ -v --tb=short 2>/dev/null|tools/pytest/working_files/|1|Unit test runner"
)

# Tool-specific configurations (same as individual_tools.conf)
BANDIT_CONFIG="--configfile tools/bandit/config/bandit.yaml"
FLAKE8_CONFIG="--config tools/flake8/config/.flake8"
BLACK_CONFIG="--config tools/black/config/pyproject.toml"
MYPY_CONFIG="--config-file tools/mypy/config/mypy.ini"
ISORT_CONFIG="--settings-path tools/isort/config/.isort.cfg"
PYTEST_CONFIG="-c tools/pytest/config/pytest.ini"

# Report settings
GENERATE_REPORT=true
REPORT_FORMAT="markdown"
REPORT_FILE="$OUTPUT_DIR/code_quality_report.md"

# Fix mode settings
AUTO_FIX_ENABLED=false
BACKUP_BEFORE_FIX=true
BACKUP_DIR="backups"

# Analysis settings
STRICT_MODE=false
SHOW_PROGRESS=true
VERBOSE_OUTPUT=false
PARALLEL_EXECUTION=false

# Thresholds (for non-strict mode)
MAX_SECURITY_ISSUES=10
MAX_STYLE_ISSUES=15
MAX_TYPE_ERRORS=10
MAX_TEST_FAILURES=5